# Workflow name that will be displayed in the GitHub Actions tab
name: Docker Publish CI

# Defines the triggers for this workflow
on:
  # Triggers on every push to the "main" branch
  push:
    branches: [ "main" ]
  # Allows to manually run this workflow from the GitHub interface
  workflow_dispatch:

# Defines the jobs to be executed
jobs:
  build-and-push-multi-arch:
    # Uses the latest version of Ubuntu as the execution environment
    runs-on: ubuntu-latest

    # Sequence of steps for this job
    steps:
    # 1. Retrieves the repository code
    - name: Check out repository code
      uses: actions/checkout@v4

    # 2. Sets up QEMU for multi-architecture emulation
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # 3. Sets up Docker Buildx to allow multi-architecture builds
    - name: Set up Docker Buildx
      id: buildx # Added an ID to be able to refer to it later
      uses: docker/setup-buildx-action@v3

    # 4. Logs in to Docker Hub using the configured secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 5. Defines the image metadata (tags, etc.)
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: holaflenain/caddypanel
        tags: |
          type=ref,event=branch
          type=raw,value=latest,enable={{is_default_branch}}

    # 6. Builds and pushes the Docker image (with cache)
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        # Builds the image for amd64 (standard) and arm64 (Raspberry Pi, etc.) architectures
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Added cache to speed up future builds
        cache-from: type=gha
        cache-to: type=gha,mode=max
