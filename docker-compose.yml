# ==============================================================================
#                Example docker-compose file for CaddyPanel
#
# How to use:
# 1. Copy this content into a file named `docker-compose.yml`.
# 2. Edit the environment variables below, especially FLASK_SECRET_KEY.
# 3. Run `docker compose up -d` in the same directory.
#
# CaddyPanel will then be accessible at http://<your_server_ip>:5000 for initial setup.
# Once Caddy is configured to manage a domain, you will access CaddyPanel through that domain.
# ==============================================================================

version: '3.8'

services:
  caddypanel:
    # Use the official image from Docker Hub.
    image: holaflenain/caddypanel:latest
    container_name: caddypanel
    restart: unless-stopped

    ports:
      # Standard ports for web traffic handled by Caddy.
      - "80:80"
      - "443:443"
      # Port for the CaddyPanel web interface.
      # You can comment this out after the initial setup if you only access
      # the UI through a domain managed by Caddy.
      - "5000:5000"

    environment:
      # --- EDIT BELOW ---
      # Secret key to secure Flask sessions.
      # !! VERY IMPORTANT !! Change this value to a long, random string.
      # You can generate one with: openssl rand -hex 32
      - FLASK_SECRET_KEY=replace-me-with-a-secure-key
      
      # Timezone for Caddy and application logs to be accurate.
      # List of timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=Etc/UTC

    volumes:
      # Volume for Caddy's configuration (Caddyfile).
      # The leading './' means the 'caddy_config' folder will be created
      # in the same directory as this docker-compose.yml file.
      - ./caddy_config:/etc/caddy
      
      # Volume for Caddy's data (SSL certificates, etc.).
      - ./caddy_data:/data
      
      # Volume for CaddyPanel's data (users, preferences).
      - ./caddypanel_data:/app_data